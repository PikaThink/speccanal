{"version":3,"sources":["pikathink.png","pikacry.gif","Context.tsx","audio.ts","Spectrogram.tsx","GetUserMedia.tsx","WaveAnimation.tsx","Recorder.tsx","Rename.tsx","FileList.tsx","Recordings.tsx","CheckeredBackground.tsx","UserFiles.tsx","Player.tsx","Settings.tsx","ResumeContext.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","StateContext","createContext","undefined","DispatchContext","defaultInitialState","echo","save","enableHotkeys","perf","stream","playing","gettingUserMedia","hasUserMedia","errors","reducer","state","action","type","payload","getUserMedia","hotkeysEnablec","Error","Provider","initialState","children","useReducer","dispatch","value","useContextState","context","React","useContext","useContextDispatch","AudioContext","analyser","createAnalyser","fftSize","smoothingTimeConstant","data","Uint8Array","frequencyBinCount","mix","createGain","bandpass","createBiquadFilter","currentTime","gain","setValueAtTime","filterGain","connect","destination","audio","source","setSource","src","disconnect","audioEl","document","createElement","createMediaElementSource","playbackEnd","Promise","resolve","addEventListener","play","setLive","createMediaStreamSource","log","x","Math","colorScale","getFft","Spectrogram","canvasRef","useRef","width","height","useEffect","requestId","canvas","current","getContext","render","bufferCanvas","bufferContext","drawImage","freqByteData","length","getByteFrequencyData","clearRect","y","fillStyle","chroma","scale","domain","out","fillRect","translate","setTransform","requestAnimationFrame","cancelAnimationFrame","ref","GetUserMedia","props","useState","permission","setPermission","a","navigator","permissions","query","name","mediaDevices","video","deniedComponent","loadingComponent","SiriWave","require","default","WaveAnimation","activeRef","active","waveRef","container","speed","amplitude","lerpSpeed","pixelDepth","start","in_min","out_min","average","array","values","i","getAverageVolume","scaledAverage","min","setAmplitude","Container","styled","div","Recorder","onRecorded","mediaRecorder","MediaRecorder","recording","setRecording","Date","onData","e","size","push","stop","onStop","result","URL","createObjectURL","Blob","duration","getTime","url","id","uuid","removeEventListener","onClick","Rename","forwardRef","originalName","setName","handleKeyPress","useCallback","key","onSubmit","onCancel","onFocus","target","select","onChange","onKeyDown","Recording","Controls","Name","RecordingsContainer","Time","Command","FileList","recordings","renaming","onSetRename","onRenameFile","onPlayAudio","onDeleteFile","downloadable","createRef","focus","map","idx","ms","minutes","floor","seconds","toFixed","parseInt","formatTime","download","href","Recordings","count","streamRef","setRecordings","setRenaming","playAudio","audioFile","then","addAudio","newFile","renameFile","slice","deleteFile","Checker","Checkered","CheckeredBackground","DropContainer","Text","p","dark","UserFiles","files","setFiles","onPlay","file","onDrop","acceptedFiles","newFiles","useDropzone","getRootProps","getInputProps","isDragActive","Player","Setting","Settings","defaultValue","checked","Modal","setAppElement","customStyles","content","top","left","right","bottom","marginRight","padding","transform","border","borderRadius","overlay","position","PikaCry","pikacry","Title","Button","button","ResumeContext","open","setOpen","isOpen","onRequestClose","style","resume","PikaThink","pikathink","App","className","Boolean","window","location","hostname","match","ReactDOM","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a99d5f83.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pikathink.a1450d16.png\";","module.exports = __webpack_public_path__ + \"static/media/pikacry.544b30d9.gif\";","import React, { createContext, useReducer } from 'react';\n\nexport type AudioFile = {\n  name: string;\n  url: string;\n  id: string;\n  // duration in ms\n  duration?: number;\n};\n\nexport type Perf = 'potato' | 'low' | 'normal' | 'high' | 'very high' | 'pikoh';\n\nexport type Action =\n  | { type: 'gettingUserMedia' }\n  | { type: 'setStream'; payload: MediaStream }\n  | { type: 'getUserMediaError'; payload: string }\n  | { type: 'playAudio'; payload: AudioFile }\n  | { type: 'setPerf'; payload: Perf }\n  | { type: 'stopPlayback' }\n  | { type: 'setHotkeysEnabled'; payload: boolean }\n  | { type: 'setEcho'; payload: boolean }\n  | { type: 'setSave'; payload: boolean };\n\ntype Dispatch = (action: Action) => void;\n\ntype Errors = {\n  getUserMedia?: string;\n  mediaRecorder?: string;\n};\n\ntype State = {\n  gettingUserMedia: boolean;\n  hasUserMedia: boolean;\n  stream: MediaStream | null;\n  perf: Perf;\n  playing: AudioFile | null;\n  errors: Errors;\n  echo: boolean;\n  save: boolean;\n  enableHotkeys: boolean;\n};\ntype Props = { initialState?: State; children: React.ReactNode };\n\nconst StateContext = createContext<State | undefined>(undefined);\nconst DispatchContext = createContext<Dispatch | undefined>(undefined);\n\nconst defaultInitialState: State = {\n  echo: true,\n  save: false,\n  enableHotkeys: true,\n  perf: 'normal',\n  stream: null,\n  playing: null,\n  gettingUserMedia: false,\n  hasUserMedia: false,\n  errors: {},\n};\n\nfunction reducer(state: State, action: Action) {\n  switch (action.type) {\n    case 'playAudio': {\n      return { ...state, playing: action.payload };\n    }\n    case 'gettingUserMedia': {\n      return { ...state, gettingUserMedia: true };\n    }\n    case 'setStream': {\n      return { ...state, stream: action.payload };\n    }\n    case 'getUserMediaError': {\n      return {\n        ...state,\n        errors: { ...state.errors, getUserMedia: action.payload },\n      };\n    }\n    case 'setPerf': {\n      return {\n        ...state,\n        perf: action.payload,\n      };\n    }\n    case 'stopPlayback': {\n      return {\n        ...state,\n        playing: null,\n      };\n    }\n    case 'setSave': {\n      return {\n        ...state,\n        save: action.payload,\n      };\n    }\n    case 'setEcho': {\n      return {\n        ...state,\n        echo: action.payload,\n      };\n    }\n    case 'setHotkeysEnabled': {\n      return {\n        ...state,\n        hotkeysEnablec: action.payload,\n      };\n    }\n    default: {\n      throw new Error(`Unhandled action type: ${action!.type}`);\n    }\n  }\n}\n\nfunction Provider({ initialState = defaultInitialState, children }: Props) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <StateContext.Provider value={state}>\n      <DispatchContext.Provider value={dispatch}>\n        {children}\n      </DispatchContext.Provider>\n    </StateContext.Provider>\n  );\n}\n\nfunction useContextState() {\n  const context = React.useContext(StateContext);\n  if (context === undefined) {\n    throw new Error('ContextState must be used within a CountProvider');\n  }\n  return context;\n}\nfunction useContextDispatch() {\n  const context = React.useContext(DispatchContext);\n  if (context === undefined) {\n    throw new Error('ContextDispatch must be used within a CountProvider');\n  }\n  return context;\n}\n\nexport { Provider, useContextState, useContextDispatch };\n","type audio = {\n  context: AudioContext;\n  analyser: AnalyserNode;\n  data: Uint8Array;\n  mix: GainNode;\n  filterGain: GainNode;\n  source: MediaStreamAudioSourceNode | MediaElementAudioSourceNode | null;\n};\n\nconst context = new AudioContext();\nconst analyser = context.createAnalyser();\n// analyser.fftSize = 4096;\n// analyser.fftSize = 2048;\nanalyser.fftSize = 128;\nanalyser.smoothingTimeConstant = 0;\nconst data = new Uint8Array(analyser.frequencyBinCount);\nconst mix = context.createGain();\nconst bandpass = context.createBiquadFilter();\nbandpass.type = 'bandpass';\nconst currentTime = context.currentTime;\nbandpass.gain.setValueAtTime(10, currentTime);\nconst filterGain = context.createGain();\nfilterGain.gain.setValueAtTime(0, currentTime);\nmix.connect(analyser);\nanalyser.connect(filterGain);\nfilterGain.connect(context.destination);\n\nconst audio: audio = {\n  context,\n  analyser,\n  mix,\n  filterGain,\n  data,\n  source: null,\n};\n\nexport function setSource(src: string) {\n  if (audio.source) {\n    audio.source.disconnect();\n  }\n  const currentTime = audio.context.currentTime;\n  audio.filterGain.gain.setValueAtTime(1, currentTime);\n  const audioEl = document.createElement('audio');\n  audioEl.src = src;\n  const source = audio.context.createMediaElementSource(audioEl);\n  audio.source = source;\n  audio.source.connect(audio.mix);\n  const playbackEnd = new Promise(resolve => {\n    audioEl.addEventListener('ended', () => resolve(true));\n  });\n  audioEl.play();\n  return playbackEnd;\n}\n\nexport function setLive(src: MediaStream) {\n  if (audio.source) {\n    audio.source.disconnect();\n  }\n  const currentTime = audio.context.currentTime;\n  audio.filterGain.gain.setValueAtTime(0, currentTime);\n  const source = audio.context.createMediaStreamSource(src);\n  source.connect(audio.mix);\n  audio.source = source;\n  audio.analyser.smoothingTimeConstant = 0;\n}\n\nexport default audio;\n","import React, { useRef, useEffect } from 'react';\nimport { useContextState } from './Context';\nimport chroma from 'chroma-js';\nimport audio from './audio';\n\nfunction log(x: number) {\n  return Math.log(x / 2) / Math.log(1.02);\n}\n\n// const colorScale = ['black', 'purple', 'red', 'orangered', 'yellow', 'white'];\nconst colorScale = [\n  '#8795E8',\n  '#94D0FF',\n  '#AD8CFF',\n  '#C774E8',\n  '#FF6AD5',\n  'white',\n];\n\ntype Perf = 'potato' | 'low' | 'normal' | 'high' | 'very high' | 'pikoh';\n\nfunction getFft(perf: Perf) {\n  switch (perf) {\n    case 'potato':\n      return 128;\n    case 'low':\n      return 256;\n    case 'normal':\n      return 512;\n    case 'high':\n      return 1024;\n    case 'very high':\n      return 2048;\n    case 'pikoh':\n      return 4096;\n    default:\n      return 512;\n  }\n}\n\nconst Spectrogram: React.FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const state = useContextState();\n  const { perf } = state;\n  // const height = log(audio.analyser.fftSize / 2);\n  const width = 1000;\n  const fftSize = getFft(perf);\n  const height = log(fftSize / 2);\n  // const height = 300;\n  useEffect(() => {\n    const fftSize = getFft(perf);\n    const height = log(fftSize / 2);\n    audio.analyser.fftSize = fftSize;\n    const canvas = canvasRef.current;\n    const context = canvas && canvas.getContext('2d');\n    let requestId: number;\n    function render() {\n      const bufferCanvas = document.createElement('canvas');\n      bufferCanvas.height = height;\n      bufferCanvas.width = width;\n      const bufferContext = bufferCanvas.getContext('2d');\n      if (bufferContext && canvas && context) {\n        bufferContext.drawImage(canvas, 0, 0, width, height);\n\n        const freqByteData = new Uint8Array(audio.analyser.frequencyBinCount);\n        const length = freqByteData.length;\n        audio.analyser.getByteFrequencyData(freqByteData);\n        context.clearRect(0, 0, width, height);\n        for (let x = 0; x < length - 1; x++) {\n          const value = freqByteData[x];\n          const y = log(x);\n          if (context) {\n            context.fillStyle = chroma\n              .scale(colorScale)\n              .domain([0, 1, 255])\n              .out('hex')(value);\n            context.fillRect(width - 1, height - y, 1, 25);\n          }\n        }\n        context.translate(-2, 0);\n        context.drawImage(\n          bufferCanvas,\n          0,\n          0,\n          width,\n          height,\n          0,\n          0,\n          width,\n          height,\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      }\n      requestId = requestAnimationFrame(render);\n    }\n    render();\n    return () => {\n      cancelAnimationFrame(requestId);\n    };\n  }, [perf]);\n\n  return <canvas ref={canvasRef} height={height} width={width} />;\n};\n\nexport default Spectrogram;\n","import React, { useEffect, useState } from 'react';\nimport { useContextDispatch, useContextState } from './Context';\nimport { setLive } from './audio';\n\ntype Props = {\n  loadingComponent: React.ReactNode;\n  deniedComponent: React.ReactNode;\n  children: React.ReactNode;\n};\n\nconst GetUserMedia = (props: Props) => {\n  const [dispatch, state] = [useContextDispatch(), useContextState()];\n  const [permission, setPermission] = useState<\n    'prompt' | 'granted' | 'denied'\n  >();\n  useEffect(() => {\n    async function getUserMedia() {\n      const permissions = await navigator.permissions.query({\n        name: 'microphone',\n      });\n      setPermission(permissions.state);\n      if (permissions.state === 'prompt' || permissions.state === 'granted') {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true,\n          video: false,\n        });\n        setLive(stream);\n        dispatch({ type: 'setStream', payload: stream });\n      } else if (permissions.state === 'denied') {\n        dispatch({ type: 'getUserMediaError', payload: 'permission denied' });\n      }\n    }\n    getUserMedia();\n  }, [dispatch]);\n\n  if (permission === 'granted' && state.stream) {\n    return <>{props.children}</>;\n  }\n  if (permission === 'denied') {\n    return <>{props.deniedComponent}</>;\n  }\n  return <>{props.loadingComponent}</>;\n};\n\nexport default GetUserMedia;\n","import React, { useEffect, useRef } from 'react';\nimport audio from './audio';\nconst SiriWave = require('siriwave').default;\n\ntype Props = {\n  active: boolean;\n};\n\nfunction getAverageVolume(array: Uint8Array) {\n  let values = 0;\n  let average;\n\n  let length = array.length;\n\n  // get all the frequency amplitudes\n  for (let i = 0; i < length; i++) {\n    values += array[i];\n  }\n\n  average = values / length;\n  return average;\n}\n\nfunction scale(\n  num: number,\n  in_min: number,\n  in_max: number,\n  out_min: number,\n  out_max: number,\n) {\n  return ((num - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min;\n}\n\nconst WaveAnimation: React.FC<Props> = props => {\n  const ref = useRef<HTMLDivElement>(null);\n  const activeRef = useRef(props.active);\n  const waveRef = useRef<any>();\n  useEffect(() => {\n    let requestId: number;\n    waveRef.current = new SiriWave({\n      container: ref.current,\n      speed: 0.15,\n      amplitude: 0.001,\n      width: 500,\n      lerpSpeed: 0.5,\n      pixelDepth: 0.07,\n      height: 150,\n    });\n    waveRef.current.start();\n    function render() {\n      const freqByteData = new Uint8Array(audio.analyser.frequencyBinCount);\n      audio.analyser.getByteFrequencyData(freqByteData);\n      const average = getAverageVolume(freqByteData);\n      const scaledAverage = Math.min(1.2, scale(average, 0, 50, 0.3, 1));\n      if (activeRef.current) {\n        waveRef.current.setAmplitude(scaledAverage);\n      }\n      requestId = requestAnimationFrame(render);\n    }\n    render();\n    return () => cancelAnimationFrame(requestId);\n  }, []);\n\n  useEffect(() => {\n    if (waveRef.current && waveRef.current.start) {\n      if (props.active) {\n        activeRef.current = true;\n        waveRef.current.setAmplitude(1);\n      } else {\n        activeRef.current = false;\n        waveRef.current.setAmplitude(0.001);\n      }\n    }\n  }, [props]);\n\n  return <div ref={ref}></div>;\n};\n\nexport default WaveAnimation;\n","import React, { useRef, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { AudioFile } from './Context';\nimport { setLive } from './audio';\nimport uuid from 'uuid/v4';\nimport WaveAnimation from './WaveAnimation';\n\ntype Props = {\n  stream: MediaStream;\n  onRecorded: (file: AudioFile) => void;\n};\n\nconst Container = styled.div`\n  height 160px;\n  border: 1px solid white;\n  box-sizing: border-box;\n`;\n\nconst Recorder: React.FC<Props> = ({ stream, onRecorded }) => {\n  const mediaRecorder = useRef<MediaRecorder>(new MediaRecorder(stream));\n  const [recording, setRecording] = useState(false);\n  const start = useRef<Date>(new Date());\n\n  useEffect(() => {\n    mediaRecorder.current = new MediaRecorder(stream);\n  }, [stream]);\n\n  useEffect(() => {\n    const data: Array<any> = [];\n    // TODO: This should be BlobEvent from @types/dom-mediacapture-record\n    function onData(e: any) {\n      if (e.data.size > 0) {\n        data.push(e.data);\n      }\n    }\n\n    function onStop() {\n      const result = URL.createObjectURL(new Blob(data));\n      const stopTime = new Date();\n      const duration = stopTime.getTime() - start.current.getTime();\n      onRecorded({\n        name: 'Recording',\n        url: result,\n        id: uuid(),\n        duration,\n      });\n      mediaRecorder.current.removeEventListener('dataavailable', onData);\n      mediaRecorder.current.removeEventListener('stop', onStop);\n    }\n\n    if (recording === false) {\n      if (mediaRecorder.current.state === 'inactive') {\n        return;\n      }\n      return mediaRecorder.current.stop();\n    }\n    if (recording === true) {\n      setLive(stream);\n      mediaRecorder.current.addEventListener('dataavailable', onData);\n      mediaRecorder.current.addEventListener('stop', onStop);\n      start.current = new Date();\n      mediaRecorder.current.start();\n      return;\n    }\n  }, [onRecorded, recording, stream]);\n\n  return (\n    <Container>\n      <WaveAnimation active={recording} />\n      {recording ? (\n        <button onClick={() => setRecording(false)}>Stop Recording</button>\n      ) : (\n        <button onClick={() => setRecording(true)}>Start Recording</button>\n      )}\n    </Container>\n  );\n};\n\nexport default Recorder;\n","import React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\n\ntype Props = {\n  originalName: string;\n  onCancel: () => void;\n  onSubmit: (name: string) => void;\n};\n\nconst Container = styled.div`\n  display: flex;\n`;\n\ntype Ref = HTMLInputElement;\nconst Rename = React.forwardRef<Ref, Props>((props, ref) => {\n  const [name, setName] = useState(props.originalName);\n  const handleKeyPress = useCallback(\n    e => {\n      if (e.key === 'Enter') {\n        props.onSubmit(name);\n      }\n      if (e.key === 'Escape') {\n        props.onCancel();\n      }\n    },\n    [name, props],\n  );\n  return (\n    <Container>\n      <input\n        ref={ref}\n        onFocus={e => e.target.select()}\n        value={name}\n        onChange={e => setName(e.target.value)}\n        onKeyDown={handleKeyPress}\n      />\n      <div onClick={() => props.onSubmit(name)}>Submit</div>\n      <div onClick={props.onCancel}>Cancel</div>\n    </Container>\n  );\n});\n\nexport default Rename;\n","// TODO: Consider virtualizing this list\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { AudioFile } from './Context';\nimport Rename from './Rename';\n\nfunction formatTime(ms: number) {\n  const minutes = Math.floor(ms / 60000);\n  const seconds = ((ms % 60000) / 1000).toFixed(0);\n  return minutes + ':' + (parseInt(seconds, 10) < 10 ? '0' : '') + seconds;\n}\n\nconst Recording = styled.div`\n  display: flex;\n  justify-content: space-between;\n  &:hover {\n    background-color: rgba(255, 255, 255, 0.2);\n  }\n`;\n\nconst Controls = styled.div`\n  display: flex;\n`;\n\nconst Name = styled.div`\n  display: flex;\n  padding-bottom: 5px;\n  cursor: pointer;\n`;\n\nconst RecordingsContainer = styled.div`\n  margin-top: 50px;\n  height: 500px;\n`;\n\nconst Time = styled.div`\n  margin-left: 20px;\n  opacity: 0.4;\n  cursor: default;\n`;\n\nconst Command = styled.div`\n  line-height: 23px;\n  cursor: pointer;\n  font-family: monospace;\n`;\n\ntype Props = {\n  recordings: Array<AudioFile>;\n  renaming: string | null;\n  onRenameFile: (name: string, index: number) => void;\n  onPlayAudio: (audioFile: AudioFile) => void;\n  onDeleteFile: (idx: number) => void;\n  onSetRename: (file: string | null) => void;\n  downloadable?: boolean;\n};\n\nconst FileList: React.FC<Props> = ({\n  recordings,\n  renaming,\n  onSetRename,\n  onRenameFile,\n  onPlayAudio,\n  onDeleteFile,\n  downloadable,\n}) => {\n  const ref = React.createRef<HTMLInputElement>();\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.focus();\n    }\n  }, [ref]);\n  return (\n    <RecordingsContainer>\n      {recordings.map((recording, idx) => (\n        <Recording key={recording.id}>\n          <Name>\n            <div>{`${idx + 1}.`}</div>\n            {recording.id === renaming ? (\n              <Rename\n                ref={ref}\n                originalName={recording.name}\n                onSubmit={name => onRenameFile(name, idx)}\n                onCancel={() => onSetRename(null)}\n              />\n            ) : (\n              <div onClick={() => onPlayAudio(recording)}>{recording.name}</div>\n            )}\n            <Time>{recording.duration && formatTime(recording.duration)}</Time>\n          </Name>\n          <Controls>\n            <Command onClick={() => onSetRename(recording.id)}>変更</Command>\n            {downloadable && (\n              <a download={`${recording.name}.ogg`} href={recording.url}>\n                DL\n              </a>\n            )}\n            <Command onClick={() => onDeleteFile(idx)}>【消す】</Command>\n          </Controls>\n        </Recording>\n      ))}\n    </RecordingsContainer>\n  );\n};\n\nexport default FileList;\n","import React, { useState, useRef, useCallback, useEffect } from 'react';\nimport GetUserMedia from './GetUserMedia';\nimport { useContextState, useContextDispatch, AudioFile } from './Context';\nimport { setSource, setLive } from './audio';\nimport Recorder from './Recorder';\nimport styled from 'styled-components';\nimport FileList from './FileList';\n\nconst Container = styled.div`\n  margin-left: 20px;\n  height: 300px;\n`;\n\nconst Recordings: React.FC = () => {\n  const count = useRef(1);\n  const streamRef = useRef<MediaStream | null>(null);\n  const [recordings, setRecordings] = useState<Array<AudioFile>>([]);\n  const [renaming, setRenaming] = useState<string | null>(null);\n  const [state, dispatch] = [useContextState(), useContextDispatch()];\n\n  const { stream, echo } = state;\n\n  useEffect(() => {\n    streamRef.current = stream;\n  }, [stream]);\n\n  const playAudio = useCallback(\n    (audioFile: AudioFile) => {\n      setSource(audioFile.url).then(() => {\n        dispatch({ type: 'stopPlayback' });\n        if (streamRef.current) {\n          setLive(streamRef.current);\n        }\n      });\n      dispatch({ type: 'playAudio', payload: audioFile });\n    },\n    [dispatch],\n  );\n\n  const addAudio = useCallback(\n    (audioFile: AudioFile) => {\n      const newFile = {\n        ...audioFile,\n        name: `new_recording_${count.current++}`,\n      };\n      setRecordings([...recordings, newFile]);\n      if (echo) {\n        playAudio(newFile);\n      }\n    },\n    [recordings, setRecordings, echo, playAudio],\n  );\n\n  const renameFile = useCallback(\n    (name, idx) => {\n      setRecordings([\n        ...recordings.slice(0, idx),\n        { ...recordings[idx], name },\n        ...recordings.slice(idx + 1),\n      ]);\n      setRenaming(null);\n    },\n    [recordings, setRecordings, setRenaming],\n  );\n\n  const deleteFile = useCallback(\n    idx => {\n      setRecordings([\n        ...recordings.slice(0, idx),\n        ...recordings.slice(idx + 1),\n      ]);\n    },\n    [recordings, setRecordings],\n  );\n\n  return (\n    <Container>\n      <GetUserMedia\n        loadingComponent={<div>Loading</div>}\n        deniedComponent={<div>Denied</div>}\n      >\n        {/* Use the postfix identifier because stream will always be true when it is passed as\n            a child of the GetUserMedia Component */}\n        <Recorder stream={state.stream!} onRecorded={addAudio} />\n        <FileList\n          recordings={recordings}\n          renaming={renaming}\n          onRenameFile={renameFile}\n          onPlayAudio={playAudio}\n          onSetRename={setRenaming}\n          onDeleteFile={deleteFile}\n          downloadable={true}\n        />\n      </GetUserMedia>\n    </Container>\n  );\n};\n\nexport default Recordings;\n","import styled from 'styled-components';\n\nconst Checker = styled.div`\n  background: linear-gradient(\n      45deg,\n      rgba(0, 0, 0, 0.0980392) 25%,\n      transparent 25%,\n      transparent 75%,\n      rgba(0, 0, 0, 0.0980392) 75%,\n      rgba(0, 0, 0, 0.0980392) 0\n    ),\n    linear-gradient(\n      45deg,\n      rgba(0, 0, 0, 0.0980392) 25%,\n      transparent 25%,\n      transparent 75%,\n      rgba(0, 0, 0, 0.0980392) 75%,\n      rgba(0, 0, 0, 0.0980392) 0\n    ),\n    white;\n  background-repeat: repeat, repeat;\n  background-position: 0px 0, 5px 5px;\n  transform-origin: 0 0 0;\n  background-origin: padding-box, padding-box;\n  background-clip: border-box, border-box;\n  background-size: 10px 10px, 10px 10px;\n  box-shadow: none;\n  text-shadow: none;\n  transition: none;\n  transform: scaleX(1) scaleY(1) scaleZ(1);\n`;\n\nexport default Checker;","import React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useDropzone } from 'react-dropzone';\nimport uuid from 'uuid/v4';\nimport { setSource, setLive } from './audio';\nimport { useContextDispatch, useContextState, AudioFile } from './Context';\nimport FileList from './FileList';\nimport CheckeredBackground from './CheckeredBackground';\n\nconst Checkered = styled(CheckeredBackground)`\n  position: absolute;\n  left: 0;\n  height: 60px;\n  width: 50%;\n  z-index: 1;\n`;\n\nconst Container = styled.div`\n  width: 50%;\n`;\n\nconst DropContainer = styled.div`\n  margin-left: auto;\n  margin-rght: auto;\n  padding-top: 40px;\n  height: 160px;\n  border: 1px solid white;\n  box-sizing: border-box;\n`;\n\ntype TextProps = {\n  dark?: boolean;\n};\nconst Text = styled.p<TextProps>`\n  color: ${props => (props.dark ? 'black' : 'white')};\n`;\n\nconst UserFiles: React.FC = () => {\n  const [files, setFiles] = useState<Array<AudioFile>>([]);\n  const [dispatch, state] = [useContextDispatch(), useContextState()];\n  const [renaming, setRenaming] = useState<string | null>(null);\n  const { stream } = state;\n  const onPlay = useCallback(\n    file => {\n      setSource(file.url).then(() => {\n        if (stream) {\n          setLive(stream);\n          dispatch({ type: 'stopPlayback' });\n        }\n      });\n      dispatch({ type: 'playAudio', payload: file });\n    },\n    [dispatch, stream],\n  );\n  const onDrop = useCallback(\n    (acceptedFiles: Array<File>) => {\n      const newFiles = acceptedFiles.map(file => ({\n        name: file.name,\n        url: URL.createObjectURL(file),\n        id: uuid(),\n      }));\n      setFiles([...files, ...newFiles]);\n    },\n    [setFiles, files],\n  );\n  const renameFile = useCallback(\n    (name, idx) => {\n      setFiles([\n        ...files.slice(0, idx),\n        { ...files[idx], name },\n        ...files.slice(idx + 1),\n      ]);\n      setRenaming(null);\n    },\n    [files, setFiles, setRenaming],\n  );\n\n  const deleteFile = useCallback(\n    idx => {\n      setFiles([...files.slice(0, idx), ...files.slice(idx + 1)]);\n    },\n    [files, setFiles],\n  );\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n  return (\n    <Container>\n      <DropContainer {...getRootProps()}>\n        <input {...getInputProps()} />\n        <>\n          <Text dark={isDragActive}>『ドロップゾーン』</Text>\n          {isDragActive ? (\n            <Text dark>Drop the files here</Text>\n          ) : (\n            <Text>Drop files here or click to select files</Text>\n          )}\n          {isDragActive && <Checkered />}\n        </>\n      </DropContainer>\n      <FileList\n        recordings={files}\n        renaming={renaming}\n        onPlayAudio={onPlay}\n        onSetRename={setRenaming}\n        onRenameFile={renameFile}\n        onDeleteFile={deleteFile}\n      />\n    </Container>\n  );\n};\n\nexport default UserFiles;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useContextState } from './Context';\n\nconst Container = styled.div`\n  display: flex;\n`;\n\n\n/*\n                    ,,,,,,,\n             @\"\"\"\"           ^*.\n             ,M                  \"\n           \"@\n           #\n         # ]\n       s   @  @Qb\n     ;###,,  @##         ,Q#    \"\n    ####\"`@       '     ]###\n           \"Q  , ^\"*W    \"%\n             j`  ]             ,#\n             [              *\"  ^b\n             %\n              ^~        \"\n*/\n// TODO: Figure this marquee stuff out later\n\n// const marquee = keyframes`\n//   0% {\n//     transform: translateX(100%);\n//   }\n//   100% {\n//     transform: translateX(-100%);\n//   }\n// `;\n\n// const MarqueeContainer = styled.div`\n//   position: relative;\n//   overflow: hidden;\n//   height: 20px;\n//   width: 100px;\n// `;\n\n// type MarqueeProps = {\n//   delay: number;\n// };\n\n// const Marquee = styled.div<MarqueeProps>`\n//   position: absolute;\n//   width: 100%;\n//   height: 100%;\n//   margin: 0;\n//   text-align: center;\n//   transform: translateX(100%);\n//   animation-name: ${marquee};\n//   animation-duration: 15s;\n//   animation-iteration-count: infinite;\n//   animation-timing-function: linear;\n//   animation-delay: ${props => props.delay}s;\n// `;\n\nconst Player: React.FC = () => {\n  const state = useContextState();\n  const { playing, stream } = state;\n  return (\n    <Container>\n      <div>今プレイ中:</div>\n      {playing && <div>{playing.name}</div>}\n      {stream && !playing && <div>Mic Input</div>}\n    </Container>\n  );\n};\n\nexport default Player;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useContextDispatch, useContextState, Perf } from './Context';\n\nconst Container = styled.div`\n  width: 100%;\n  box-sizing: border-box;\n  border: 1px solid white;\n  justify-content: space-between;\n  padding: 10px;\n  display: flex;\n  font-size: 13px;\n`;\n\nconst Setting = styled.div`\n  color: white;\n`;\n\nconst Settings: React.FC = () => {\n  const [state, dispatch] = [useContextState(), useContextDispatch()];\n  /*\n    - echo\n    - hotkeys\n    - save to idb\n    - quality\n    - help\n    - exit\n    */\n\n  return (\n    <Container>\n      <Setting>\n        <span>quality</span>\n        <span>\n          <select\n            defaultValue={state.perf}\n            value={state.perf}\n            onChange={e =>\n              dispatch({ type: 'setPerf', payload: e.target.value as Perf })\n            }\n          >\n            <option value=\"potato\">Potato</option>\n            <option value=\"low\">Low</option>\n            <option value=\"normal\">Normal</option>\n            <option value=\"high\">High</option>\n            <option value=\"very high\">Very High</option>\n            <option value=\"pikoh\">pikoh</option>\n          </select>\n        </span>\n      </Setting>\n      <Setting>\n        <span>echo</span>\n        <span>\n          <input\n            type=\"checkbox\"\n            checked={state.echo}\n            onChange={e => {\n              dispatch({ type: 'setEcho', payload: e.target.checked });\n            }}\n          />\n        </span>\n      </Setting>\n      <Setting>save to idb</Setting>\n      <Setting>hotkeys</Setting>\n      <Setting>help</Setting>\n      <Setting>exit</Setting>\n    </Container>\n  );\n};\n\nexport default Settings;\n","import React, { useState, useEffect } from 'react';\nimport Modal from 'react-modal';\nimport audio from './audio';\nimport styled from 'styled-components';\nimport pikacry from './pikacry.gif';\nimport CheckeredBackground from './CheckeredBackground';\n\nconst Checkered = styled(CheckeredBackground)`\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n`;\nModal.setAppElement('#root');\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    padding: 0,\n    transform: 'translate(-50%, -50%)',\n    border: 'none',\n    borderRadius: 0,\n  },\n  overlay: {\n    position: 'static',\n    border: 'none',\n    borderRadius: 0,\n  },\n};\n\nconst PikaCry = styled.div`\n  width: 300px;\n  height: 300px;\n  padding: 30px;\n  margin-bottom: 30px;\n  margin-right: 200px;\n  margin-left: 60px;\n  overflow: hidden;\n  background-position: cover;\n  background-image: url(${pikacry});\n`;\n\nconst Title = styled.div`\n  font-family: 'Share Tech Mono';\n  background-color: #8795e8;\n  color: white;\n  text-align: center;\n  font-size: 20px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n`;\n\nconst Text = styled.p`\n  font-family: 'Share Tech Mono';\n  background-color: #8795e8;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  color: white;\n`;\n\nconst Button = styled.button`\n  text-align: center;\n  margin: auto;\n`;\n\nconst ResumeContext: React.FC = () => {\n  const [open, setOpen] = useState<boolean>(false);\n  useEffect(() => {\n    if (audio.context.state === 'suspended') {\n      setOpen(true);\n    }\n    if (audio.context.state === 'running') {\n      setOpen(false);\n    }\n  }, []);\n\n  return (\n    <Modal\n      isOpen={open}\n      onRequestClose={() => setOpen(false)}\n      style={customStyles}\n    >\n      <Checkered>\n        <PikaCry>\n          <Title>Unpause AudioContext</Title>\n          <Text>Audio Context API is ask for user interaction to unpause</Text>\n          <Button\n            onClick={() =>\n              audio.context.resume().then(() => {\n                setOpen(false);\n              })\n            }\n          >\n            Unpause\n          </Button>\n        </PikaCry>\n      </Checkered>\n    </Modal>\n  );\n};\n\nexport default ResumeContext;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Provider } from './Context';\nimport Spectrogram from './Spectrogram';\nimport Recordings from './Recordings';\nimport UserFiles from './UserFiles';\nimport Player from './Player';\nimport Settings from './Settings';\nimport pikathink from './pikathink.png';\nimport './App.css';\nimport ResumeContext from './ResumeContext';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 1000px;\n  margin-top: 30px;\n`;\n\nconst Title = styled.div`\n  font-family: 'Liu Jian Mao Cao';\n  font-size: 80px;\n  color: white;\n`;\n\nconst PikaThink = styled.div`\n  background-image: url(${pikathink});\n  background-repeat: no-repeat;\n  position: fixed;\n  width: 111px;\n  height: 111px;\n  bottom: 0;\n  right: 0;\n`;\n\nconst App: React.FC = () => {\n  return (\n    <Provider>\n      <div className=\"App\">\n        <Title>SpeccAnal</Title>\n        <Player />\n        <Spectrogram />\n        <Settings />\n        <Container>\n          <UserFiles />\n          <Recordings />\n        </Container>\n        <ResumeContext />\n        <PikaThink />\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}